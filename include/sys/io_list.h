#ifndef IO_LIST_H_
#define IO_LIST_H_

typedef struct
{
  uint16_t key_make;
  uint16_t key_break;
  const char key_value;
  const char key_shift_value;
  const char key_caps_value;
  const char key_nums_value;
} keytable_format;

static keytable_format keytable[] = {
  // Main Keys
  { 0x01, 0x81, '\xE5CA7E', '\xE5CA7E', '\xE5CA7E', '\xE5CA7E' },
  { 0x02, 0x82, '1', '!', '1', ' ' },
  { 0x03, 0x83, '2', '@', '2', ' ' },
  { 0x04, 0x84, '3', '#', '3', ' ' },
  { 0x05, 0x85, '4', '$', '4', ' ' },
  { 0x06, 0x86, '5', '%', '5', ' ' },
  { 0x07, 0x87, '6', '^', '6', ' ' },
  { 0x08, 0x88, '7', '&', '7', ' ' },
  { 0x09, 0x89, '8', '*', '8', ' ' },
  { 0x0A, 0x8A, '9', '(', '9', ' ' },
  { 0x0B, 0x8B, '0', ')', '0', ' ' },
  { 0x0C, 0x8C, '-', '_', '-', ' ' },
  { 0x0D, 0x8D, '=', '+', '=', ' ' },
  { 0x0E, 0x8E, '\b', '\b', '\b', ' ' },
  { 0x0F, 0x8F, '\t', '\t', '\t', ' ' },
  { 0x10, 0x90, 'q', 'Q', 'Q', ' ' },
  { 0x11, 0x91, 'w', 'W', 'W', ' ' },
  { 0x12, 0x92, 'e', 'E', 'E', ' ' },
  { 0x13, 0x93, 'r', 'R', 'R', ' ' },
  { 0x14, 0x94, 't', 'T', 'T', ' ' },
  { 0x15, 0x95, 'y', 'Y', 'Y', ' ' },
  { 0x16, 0x96, 'u', 'U', 'U', ' ' },
  { 0x17, 0x97, 'i', 'I', 'I', ' ' },
  { 0x18, 0x98, 'o', 'O', 'O', ' ' },
  { 0x19, 0x99, 'p', 'P', 'P', ' ' },
  { 0x1A, 0x9A, '[', '{', '[', ' ' },
  { 0x1B, 0x9B, ']', '}', ']', ' ' },
  { 0x1C, 0x9C, '\r', '\r', '\r', ' ' },
  { 0x1D, 0x9D, '\x1EF7C741', 'A', 'A', ' ' },
  { 0x1E, 0x9E, 'a', 'A', 'A', ' ' },
  { 0x1F, 0x9F, 's', 'S', 'S', ' ' },
  { 0x20, 0xA0, 'd', 'D', 'D', ' ' },
  { 0x21, 0xA1, 'f', 'F', 'F', ' ' },
  { 0x22, 0xA2, 'g', 'G', 'G', ' ' },
  { 0x23, 0xA3, 'h', 'H', 'H', ' ' },
  { 0x24, 0xA4, 'j', 'J', 'J', ' ' },
  { 0x25, 0xA5, 'k', 'K', 'K', ' ' },
  { 0x26, 0xA6, 'l', 'L', 'L', ' ' },
  { 0x27, 0xA7, ';', ':', ';', ' ' },
  { 0x28, 0xA8, '\'', '"', '\'', ' ' },
  { 0x29, 0xA9, '`', '~', '`', ' ' },
  { 0x2A, 0xAA, '\x1EF7581F7', '\x1EF7581F7', '\x1EF7581F7', ' ' },
  { 0x2B, 0xAB, '\\', '|', '\\', ' ' },
  { 0x2C, 0xAC, 'z', 'Z', 'Z', ' ' },
  { 0x2D, 0xAD, 'x', 'X', 'X', ' ' },
  { 0x2E, 0xAE, 'c', 'C', 'C', ' ' },
  { 0x2F, 0xAF, 'v', 'V', 'V', ' ' },
  { 0x30, 0xB0, 'b', 'B', 'B', ' ' },
  { 0x31, 0xB1, 'n', 'N', 'N', ' ' },
  { 0x32, 0xB2, 'm', 'M', 'M', ' ' },
  { 0x33, 0xB3, ',', '<', ',', ' ' },
  { 0x34, 0xB4, '.', '>', '.', ' ' },
  { 0x35, 0xB5, '/', '?', '/', ' ' },
  { 0x36, 0xB6, '\x18581F7', '\x18581F7', '\x18581F7', ' ' },
  { 0x37, 0xB7, '*', '*', '*', '*' },
  { 0x38, 0xB8, '\x1EF7A17', '\x1EF7A17', '\x1EF7A17', ' ' },
  { 0x39, 0xB9, ' ', ' ', ' ', ' ' },
  { 0x3A, 0xBA, '\xCA75', '\xCA75', '\xCA75', ' ' },
  { 0x3B, 0xBB, '\xFF1', '\xFF1', '\xFF1', ' ' },
  { 0x3C, 0xBC, '\xFF2', '\xFF2', '\xFF2', ' ' },
  { 0x3D, 0xBD, '\xFF3', '\xFF3', '\xFF3', ' ' },
  { 0x3E, 0xBE, '\xFF4', '\xFF4', '\xFF4', ' ' },
  { 0x3F, 0xBF, '\xFF5', '\xFF5', '\xFF5', ' ' },
  { 0x40, 0xC0, '\xFF6', '\xFF6', '\xFF6', ' ' },
  { 0x41, 0xC1, '\xFF7', '\xFF7', '\xFF7', ' ' },
  { 0x42, 0xC2, '\xFF8', '\xFF8', '\xFF8', ' ' },
  { 0x43, 0xC3, '\xFF9', '\xFF9', '\xFF9', ' ' },
  { 0x44, 0xC4, '\xFF10', '\xFF10', '\xFF10', ' ' },
  { 0x45, 0xC5, '\xDEEDE', '\xDEEDE', '\xDEEDE', ' ' },    // Num Lock
  { 0x46, 0xC6, '\x5C0411', '\x5C0411', '\x5C0411', ' ' }, // Scroll Lock

  { 0x47, 0xC7, '\x80eeE', '\x80eeE', '\x80eeE', '7' },
  { 0x48, 0xC8, '\x1A440', '\x1A440', '\x1A440', '8' },
  { 0x49, 0xC9, '\x17Ab3', '\x17Ab3', '\x17Ab3', '9' },
  { 0x4A, 0xCA, '-', '-', '-', ' ' },
  { 0x4B, 0xCB, '\x1EF7A440', '\x1EF7A440', '\x1EF7A440', '4' },
  { 0x4C, 0xCC, ' ', '5', ' ', '5' },
  { 0x4D, 0xCD, '\x18A440', '\x18A440', '\x18A440', '6' },
  { 0x4E, 0xCE, '+', '+', '+', ' ' },
  { 0x4F, 0xCF, '\xEeeD', '\xEeeD', '\xEeeD', '1' },
  { 0x50, 0xD0, '\xDeeA440', '\xDeeA440', '\xDeeA440', '2' },
  { 0x51, 0xD1, '\xDee7Ab3', '\xDee7Ab3', '\xDee7Ab3', '3' },
  { 0x52, 0xD2, '\x1ee5', '\x1ee5', '\x1ee5', '0' },
  { 0x53, 0xD3, '\xDE1E7E', '\xDE1E7E', '\xDE1E7E', '.' },
};

#endif